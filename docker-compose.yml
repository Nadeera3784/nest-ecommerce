version: '3.1'
services:
  mongo_authentication:
    image: bitnami/mongodb:4.2.17
    restart: always
    ports:
      - 27017:27017
    environment:
      ALLOW_EMPTY_PASSWORD: "yes"
      MONGO_INITDB_ROOT_USERNAME: root
    volumes:
      - 'mongodb_authentication_data:/bitnami/mongodb'

  mongo_inventory:
    image: bitnami/mongodb:4.2.17
    restart: always
    ports:
      - 27018:27017
    environment:
      ALLOW_EMPTY_PASSWORD: "yes"
      MONGO_INITDB_ROOT_USERNAME: root
    volumes:
      - 'mongodb_inventory_data:/bitnami/mongodb'

  mongo_payment:
    image: bitnami/mongodb:4.2.17
    restart: always
    ports:
      - 27019:27017
    environment:
      ALLOW_EMPTY_PASSWORD: "yes"
      MONGO_INITDB_ROOT_USERNAME: root
    volumes:
      - 'mongodb_payment_data:/bitnami/mongodb'

  rabbitmq:
    image: 'bitnami/rabbitmq:3.9'
    restart: always
    ports:
      - 5672:5672
      - 15672:15672
      - 61613:61613
      - 15674:15674
    environment:
      RABBITMQ_VM_MEMORY_HIGH_WATERMARK: 0.1
      RABBITMQ_DISK_FREE_RELATIVE_LIMIT: 0.05
      RABBITMQ_PLUGINS: 'rabbitmq_management,rabbitmq_stomp,rabbitmq_web_stomp'
    volumes:
      - 'rabbitmq_data:/bitnami'

  redis:
    image: 'bitnami/redis:6.0'
    restart: always
    environment:
      ALLOW_EMPTY_PASSWORD: "yes"
    ports:
      - 6379:6379

  # application services (example ports; adjust as needed)
  authentication:
    build:
      context: ./authentication
    depends_on:
      - mongo_authentication
      - rabbitmq
      - redis
    environment:
      - MONGODB_URL=mongodb://root@mongo_authentication:27017
      - RABBITMQ_URL=amqp://rabbitmq:5672
    ports:
      - 3001:3000

  inventory:
    build:
      context: ./inventory
    depends_on:
      - mongo_inventory
      - rabbitmq
      - redis
    environment:
      - MONGODB_URL=mongodb://root@mongo_inventory:27017
      - RABBITMQ_URL=amqp://rabbitmq:5672
    ports:
      - 3002:3000

  payment:
    build:
      context: ./payment
    depends_on:
      - mongo_payment
      - rabbitmq
      - redis
    environment:
      - MONGODB_URL=mongodb://root@mongo_payment:27017
      - RABBITMQ_URL=amqp://rabbitmq:5672
    ports:
      - 3003:3000

  gateway:
    build:
      context: ./gateway
    depends_on:
      - authentication
      - inventory
      - payment
      - rabbitmq
      - redis
    environment:
      - AUTH_SERVICE_URL=http://authentication:3000
      - INVENTORY_SERVICE_URL=http://inventory:3000
      - PAYMENT_SERVICE_URL=http://payment:3000
    ports:
      - 8080:3000

  # es01:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
  #   restart: always
  #   environment:
  #     - node.name=es01
  #     - cluster.name=es-docker-cluster
  #     - discovery.seed_hosts=
  #     - cluster.initial_master_nodes=es01
  #     - bootstrap.memory_lock=true
  #     - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
  #     - http.cors.enabled=true
  #     - http.cors.allow-origin=/.*/
  #   ulimits:
  #     nproc: 8192
  #     nofile: 524288
  #     memlock: -1
  #   mem_limit: 3g
  #   volumes:
  #     - es_data:/usr/share/elasticsearch/data
  #   ports:
  #     - 9200:9200

volumes:
  mongodb_authentication_data:
    driver: local
  mongodb_inventory_data:
    driver: local
  mongodb_payment_data:
    driver: local
  rabbitmq_data:
    driver: local
  # es_data:
  #   driver: local
